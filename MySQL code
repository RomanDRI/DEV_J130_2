CREATE TABLE Продукты (
    артикул CHAR(7) PRIMARY KEY NOT NULL,
    наименование VARCHAR(50) NOT NULL,
    цвет VARCHAR(20),
    цена INTEGER NOT NULL,
    остаток_на_складе INTEGER NOT NULL
    );

DELIMITER //
CREATE TRIGGER Продукты_chkIN_цена BEFORE INSERT ON Продукты
FOR EACH ROW BEGIN IF NEW.цена<=0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Цена должна быть больше нуля';
END IF;
END //;
DELIMITER //
CREATE TRIGGER Продукты_chkUP_цена BEFORE UPDATE ON Продукты
FOR EACH ROW BEGIN IF NEW.цена<=0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Цена должна быть больше нуля';
END IF;
END //;
DELIMITER //
CREATE TRIGGER Продукты_chkIN_остаток BEFORE INSERT ON Продукты
FOR EACH ROW BEGIN IF NEW.остаток_на_складе<0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Остаток на складе должен быть больше либо равен нулю';
END IF;
END //;
DELIMITER //
CREATE TRIGGER Продукты_chkUP_остаток BEFORE UPDATE ON Продукты
FOR EACH ROW BEGIN IF NEW.остаток_на_складе<0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Остаток на складе должен быть больше либо равен нулю';
END IF;
END; //
DELIMITER ;

CREATE TABLE Заказы (
    идентификатор INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    дата_создания DATE NOT NULL,
    ФИО_заказчика VARCHAR(100) NOT NULL,
    контактный_телефон VARCHAR(50),
    адрес_эл_почты VARCHAR(50),
    адрес_доставки VARCHAR(200) NOT NULL,
    статус_заказа CHAR(1) NOT NULL,
    дата_отгрузки_заказа DATE
    );

CREATE TABLE Позиции_заказа (
    код_записи_заказа INTEGER NOT NULL,
    артикул_товара CHAR(7) NOT NULL,
    цена INTEGER NOT NULL,
    количество INTEGER NOT NULL,
    FOREIGN KEY (код_записи_заказа) REFERENCES Заказы (идентификатор),
    FOREIGN KEY (артикул_товара) REFERENCES Продукты (артикул)
    );

DELIMITER //
CREATE TRIGGER Позиции_chkIN_цена BEFORE INSERT ON Позиции_заказа
FOR EACH ROW BEGIN IF NEW.цена<=0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Цена должна быть больше нуля';
END IF;
END //;
DELIMITER //
CREATE TRIGGER Позиции_chkUP_цена BEFORE UPDATE ON Позиции_заказа
FOR EACH ROW BEGIN IF NEW.цена<=0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Цена должна быть больше нуля';
END IF;
END //;
DELIMITER //
CREATE TRIGGER Позиции_chkIN_количество BEFORE INSERT ON Позиции_заказа
FOR EACH ROW BEGIN IF NEW.количество<=0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Количество позиций в заказе должно быть больше нуля';
END IF;
END //;
DELIMITER //
CREATE TRIGGER Позиции_chkUP_количество BEFORE UPDATE ON Позиции_заказа
FOR EACH ROW BEGIN IF NEW.количество<=0 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Количество позиций в заказе должно быть больше нуля';
END IF;
END; //
DELIMITER ;

INSERT INTO Продукты (артикул, наименование, цвет, цена, остаток_на_складе) VALUES ('3251615', 'Стол кухонный', 'белый', 8000, 12);
INSERT INTO Продукты (артикул, наименование, цена, остаток_на_складе) VALUES ('3251616', 'Стол кухонный', 8000, 15);
INSERT INTO Продукты (артикул, наименование, цвет, цена, остаток_на_складе) VALUES ('3251617', 'Стул столовый "гусарский"', 'орех', 4000, 0);
INSERT INTO Продукты (артикул, наименование, цвет, цена, остаток_на_складе) VALUES ('3251619', 'Стул столовый с высокой спинкой', 'белый', 3500, 37);
INSERT INTO Продукты (артикул, наименование, цвет, цена, остаток_на_складе) VALUES ('3251620', 'Стул столовый с высокой спинкой', 'коричневый', 3500, 52);

INSERT INTO Заказы (дата_создания, ФИО_заказчика, контактный_телефон, адрес_доставки, статус_заказа, дата_отгрузки_заказа) VALUES ('2020-11-20', 'Сергей Иванов', '(981)123-45-67', 'ул. Веденеева, 20-1-41', 'S', '2020-11-29');
INSERT INTO Заказы (дата_создания, ФИО_заказчика, контактный_телефон, адрес_доставки, статус_заказа, дата_отгрузки_заказа) VALUES ('2020-11-22', 'Алексей Комаров', '(921)001-22-33', 'пр. Пархоменко, 51-2-123', 'S', '2020-11-29');
INSERT INTO Заказы (дата_создания, ФИО_заказчика, контактный_телефон, адрес_доставки, статус_заказа) VALUES ('2020-11-28', 'Ирина Викторова', '(911)009-88-77', 'пр. Тихорецкий, 21-21', 'P');
INSERT INTO Заказы (дата_создания, ФИО_заказчика, адрес_эл_почты, адрес_доставки, статус_заказа) VALUES ('2020-12-03', 'Павел Николаев', 'pasha_nick@mail.ru', 'ул. Хлопина, 3-88', 'P');
INSERT INTO Заказы (дата_создания, ФИО_заказчика, контактный_телефон, адрес_эл_почты, адрес_доставки, статус_заказа) VALUES ('2020-12-03', 'Антонина Васильева', '(931)777-66-55', 'antvas66@gmail.com', 'пр. Науки, 11-3-9', 'P');
INSERT INTO Заказы (дата_создания, ФИО_заказчика, контактный_телефон, адрес_доставки, статус_заказа) VALUES ('2020-12-10', 'Ирина Викторова', '(911)009-88-77', 'пр. Тихорецкий, 21-21', 'P');

INSERT INTO Позиции_заказа(код_записи_заказа, артикул_товара, цена, количество) VALUES (1,'3251616',7500, 1);
INSERT INTO Позиции_заказа(код_записи_заказа, артикул_товара, цена, количество) VALUES (2,'3251615',7500, 1);
INSERT INTO Позиции_заказа(код_записи_заказа, артикул_товара, цена, количество) VALUES (3,'3251615',8000, 1);
INSERT INTO Позиции_заказа(код_записи_заказа, артикул_товара, цена, количество) VALUES (3,'3251617',4000, 4);
INSERT INTO Позиции_заказа(код_записи_заказа, артикул_товара, цена, количество) VALUES (4,'3251619',3500, 2);
INSERT INTO Позиции_заказа(код_записи_заказа, артикул_товара, цена, количество) VALUES (5,'3251615',8000, 1);
INSERT INTO Позиции_заказа(код_записи_заказа, артикул_товара, цена, количество) VALUES (5,'3251617',4000, 4);
INSERT INTO Позиции_заказа(код_записи_заказа, артикул_товара, цена, количество) VALUES (6,'3251617',4000, 2);